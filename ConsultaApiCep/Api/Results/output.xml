<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.11.0 on win32)" generated="20230114 21:03:34.463" rpa="false" schemaversion="3">
<suite id="s1" name="PesquisarCep" source="C:\Users\raphael.maciel\Desktop\Desafio\Api\Tests\PesquisarCep.robot">
<test id="s1-t1" name="Caso de teste 1: Pesquisar um cep válido" line="6">
<kw name="Dado que esteja conectado no site ApiCep" library="PesquisarCep">
<kw name="Create Session" library="RequestsLibrary">
<arg>ApiCep</arg>
<arg>${URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230114 21:03:34.727" level="INFO">Creating Session using : alias=ApiCep, url=https://cdn.apicep.com/file/apicep/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230114 21:03:34.727" endtime="20230114 21:03:34.727"/>
</kw>
<status status="PASS" starttime="20230114 21:03:34.726" endtime="20230114 21:03:34.727"/>
</kw>
<kw name="Quando o usuário consultar o CEP &quot;20250-054&quot;" library="PesquisarCep" sourcename="Quando o usuário consultar o CEP &quot;${CEP}&quot;">
<kw name="Catenate" library="BuiltIn">
<var>${CEP}</var>
<arg>${CEP}.json</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230114 21:03:34.728" level="INFO">${CEP} = 20250-054.json</msg>
<status status="PASS" starttime="20230114 21:03:34.728" endtime="20230114 21:03:34.728"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE_CONSULTA_CEP}</var>
<arg>ApiCep</arg>
<arg>${CEP}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230114 21:03:35.050" level="INFO">GET Request : url=https://cdn.apicep.com/file/apicep/20250-054.json 
 path_url=/file/apicep/20250-054.json 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230114 21:03:35.050" level="INFO">GET Response : url=https://cdn.apicep.com/file/apicep/20250-054.json 
 status=200, reason=OK 
 headers={'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Date': 'Sun, 15 Jan 2023 00:03:16 GMT', 'etag': 'W/"e5f52949c547e464b5c32f345f60e80e"', 'vary': 'Access-Control-Request-Headers,Access-Control-Request-Method,Origin', 'x-hw': '1673740996.dop049.sp3.t,1673740996.cds240.sp3.hn,1673740996.cds045.sp3.c', 'CF-RAY': '789a58ed28131ab8-GRU', 'Server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400, h3-29=":443"; ma=86400', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=qBMBoctnNciUELU3GJxZaoCxVu97%2FXZk3oiLBCesD%2FFoU5SKtg7lv4qztYZk%2BRgXquIufGViYKsA%2BWK%2BXAyPDFDAIeB9HpSojRPE2dmdxmpF6TCwdjjuJkQQ6DDS%2BCl3Kg%3D%3D"}],"group":"cf-nel","max_age":604800}', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json', 'Cache-Control': 'max-age=594264', 'last-modified': 'Thu, 15 Sep 2022 23:25:48 GMT', 'x-sp-metadata': 'HS256.CNShjZ4GEokBCiQ1NWI2ZThiOC05YmFlLTRlOWItYTgxZS02YzhhNzFiYjFhNDcQkMbntoHF+wIaBgjEhY2eBiIOMTcyLjcxLjIzNC4xMDQoiv4CMAM4BEIWVExTX0FFU18xMjhfR0NNX1NIQTI1NlogOTA1ODVlMTVhNDQxMDljMWRiMTMyNTgwNDBiNzNhMjAaKwgBEiQwNzRhODRmYS02MTkwLTQyYjYtOTE3NS1hMGZjY2VjMjZjMjcYsgEiGAgCEhRjZHMwNDUuc3AzLmh3Y2RuLm5ldA==.PC0/mufeKHHGTv3xhRy7shXN+81hJcIW1u58I4obC6w=', 'CF-Cache-Status': 'DYNAMIC', 'x-amz-request-id': 'tx00000000000025138b516-0063c3199c-42d93a25-sfo2a', 'Transfer-Encoding': 'chunked', 'x-rgw-object-type': 'Normal', 'x-amz-meta-s3cmd-attrs': 'atime:1663201059/ctime:1663204607/gid:1000/gname:rafas/mode:33188/mtime:1663201059/uid:1000/uname:rafas', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload'} 
 body={"code":"20250-054","state":"RJ","city":"Rio de Janeiro","district":"Estácio","address":"Rua São Carlos - de 481 ao fim - lado ímpar","status":200,"ok":true,"statusText":"ok"} 
 </msg>
<msg timestamp="20230114 21:03:35.050" level="INFO">C:\Users\raphael.maciel\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'cdn.apicep.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230114 21:03:35.051" level="INFO">${RESPONSE_CONSULTA_CEP} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230114 21:03:34.728" endtime="20230114 21:03:35.051"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE_CONSULTA_CEP}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230114 21:03:35.052" level="INFO">${RESPONSE_CONSULTA_CEP} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230114 21:03:35.051" endtime="20230114 21:03:35.052"/>
</kw>
<status status="PASS" starttime="20230114 21:03:34.728" endtime="20230114 21:03:35.052"/>
</kw>
<kw name="Então deve ser mostrado o endereço &quot;Rua São Carlos - de 481 ao fim - lado ímpar&quot;" library="PesquisarCep" sourcename="Então deve ser mostrado o endereço &quot;${ENDEREÇO}&quot;">
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE_CONSULTA_CEP.json()}</arg>
<arg>address</arg>
<arg>${ENDEREÇO}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230114 21:03:35.053" endtime="20230114 21:03:35.054"/>
</kw>
<status status="PASS" starttime="20230114 21:03:35.053" endtime="20230114 21:03:35.055"/>
</kw>
<kw name="E deve ser mostrado o bairro &quot;Estácio&quot;" library="PesquisarCep" sourcename="E deve ser mostrado o bairro &quot;${BAIRRO}&quot;">
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE_CONSULTA_CEP.json()}</arg>
<arg>district</arg>
<arg>${BAIRRO}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230114 21:03:35.056" endtime="20230114 21:03:35.057"/>
</kw>
<status status="PASS" starttime="20230114 21:03:35.056" endtime="20230114 21:03:35.057"/>
</kw>
<kw name="E deve ser mostrada a cidade &quot;Rio de Janeiro&quot;" library="PesquisarCep" sourcename="E deve ser mostrada a cidade &quot;${CIDADE}&quot;">
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE_CONSULTA_CEP.json()}</arg>
<arg>city</arg>
<arg>${CIDADE}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230114 21:03:35.058" endtime="20230114 21:03:35.059"/>
</kw>
<status status="PASS" starttime="20230114 21:03:35.057" endtime="20230114 21:03:35.059"/>
</kw>
<kw name="E deve ser mostrada a UF &quot;RJ&quot;" library="PesquisarCep" sourcename="E deve ser mostrada a UF &quot;${ESTADO}&quot;">
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE_CONSULTA_CEP.json()}</arg>
<arg>state</arg>
<arg>${ESTADO}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230114 21:03:35.060" endtime="20230114 21:03:35.061"/>
</kw>
<status status="PASS" starttime="20230114 21:03:35.060" endtime="20230114 21:03:35.061"/>
</kw>
<kw name="E deve ser mostrado o CEP &quot;20250-054&quot;" library="PesquisarCep" sourcename="E deve ser mostrado o CEP &quot;${CEP}&quot;">
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE_CONSULTA_CEP.json()}</arg>
<arg>code</arg>
<arg>${CEP}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230114 21:03:35.062" endtime="20230114 21:03:35.064"/>
</kw>
<status status="PASS" starttime="20230114 21:03:35.062" endtime="20230114 21:03:35.064"/>
</kw>
<kw name="E status code deve ser &quot;200&quot;" library="PesquisarCep" sourcename="E status code deve ser &quot;${STATUS_CODE}&quot;">
<kw name="Get File" library="OperatingSystem">
<var>${JSON_CEP_VALIDO}</var>
<arg>../JSON/CepValido.json</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230114 21:03:35.064" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raphael.maciel\Desktop\Desafio\Api\JSON\CepValido.json"&gt;C:\Users\raphael.maciel\Desktop\Desafio\Api\JSON\CepValido.json&lt;/a&gt;'.</msg>
<msg timestamp="20230114 21:03:35.065" level="INFO">${JSON_CEP_VALIDO} = {
    "code": "20250-054",
    "state": "RJ",
    "city": "Rio de Janeiro",
    "district": "Estácio",
    "address": "Rua São Carlos - de 481 ao fim - lado ímpar",
    "status": 200,
    "ok": true,
...</msg>
<status status="PASS" starttime="20230114 21:03:35.064" endtime="20230114 21:03:35.065"/>
</kw>
<kw name="Convert String To Json" library="JSONLibrary">
<var>${JSON_CEP_VALIDO}</var>
<arg>${JSON_CEP_VALIDO}</arg>
<doc>Convert String to JSON object</doc>
<msg timestamp="20230114 21:03:35.066" level="INFO">${JSON_CEP_VALIDO} = {'code': '20250-054', 'state': 'RJ', 'city': 'Rio de Janeiro', 'district': 'Estácio', 'address': 'Rua São Carlos - de 481 ao fim - lado ímpar', 'status': 200, 'ok': True, 'statusText': 'ok'}</msg>
<status status="PASS" starttime="20230114 21:03:35.065" endtime="20230114 21:03:35.066"/>
</kw>
<kw name="Dictionaries Should Be Equal" library="Collections">
<arg>${RESPONSE_CONSULTA_CEP.json()}</arg>
<arg>${JSON_CEP_VALIDO}</arg>
<doc>Fails if the given dictionaries are not equal.</doc>
<status status="PASS" starttime="20230114 21:03:35.066" endtime="20230114 21:03:35.066"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE_CONSULTA_CEP.status_code}</arg>
<arg>${STATUS_CODE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230114 21:03:35.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230114 21:03:35.066" endtime="20230114 21:03:35.067"/>
</kw>
<status status="PASS" starttime="20230114 21:03:35.064" endtime="20230114 21:03:35.067"/>
</kw>
<status status="PASS" starttime="20230114 21:03:34.725" endtime="20230114 21:03:35.069"/>
</test>
<test id="s1-t2" name="Caso de teste 2: Pesquisar um cep invalido" line="16">
<kw name="Dado que esteja conectado no site ApiCep" library="PesquisarCep">
<kw name="Create Session" library="RequestsLibrary">
<arg>ApiCep</arg>
<arg>${URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230114 21:03:35.072" level="INFO">Creating Session using : alias=ApiCep, url=https://cdn.apicep.com/file/apicep/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230114 21:03:35.072" endtime="20230114 21:03:35.072"/>
</kw>
<status status="PASS" starttime="20230114 21:03:35.072" endtime="20230114 21:03:35.072"/>
</kw>
<kw name="Quando o usuário consultar o CEP invalido &quot;33333-334&quot;" library="PesquisarCep" sourcename="Quando o usuário consultar o CEP invalido &quot;${CEP}&quot;">
<kw name="Catenate" library="BuiltIn">
<var>${CEP}</var>
<arg>${CEP}.json</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230114 21:03:35.073" level="INFO">${CEP} = 33333-334.json</msg>
<status status="PASS" starttime="20230114 21:03:35.073" endtime="20230114 21:03:35.073"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE_CONSULTA_CEP}</var>
<arg>ApiCep</arg>
<arg>${CEP}</arg>
<arg>expected_status=403</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230114 21:03:36.079" level="INFO">GET Request : url=https://cdn.apicep.com/file/apicep/33333-334.json 
 path_url=/file/apicep/33333-334.json 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230114 21:03:36.079" level="INFO">GET Response : url=https://cdn.apicep.com/file/apicep/33333-334.json 
 status=403, reason=Forbidden 
 headers={'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Date': 'Sun, 15 Jan 2023 00:03:17 GMT', 'vary': 'Access-Control-Request-Headers,Access-Control-Request-Method,Origin', 'x-hw': '1673740996.dop050.sp3.t,1673740996.cds203.sp3.hn,1673740997.cds205.sp3.p', 'CF-RAY': '789a58eebeb76b08-GRU', 'Server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400, h3-29=":443"; ma=86400', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=K8XLM2AFDgZ3aaDWaM4nx0ANIHVNrDJxHGSYdEuzUOCBZFNCezE7kqayZNmiSuXkpRi9e%2Ft5Qt9bU6z2N5QbSufyQG%2BkBmsl9wMbVDhwMMxnZHPujymFNPa%2Br1DTCD28Yw%3D%3D"}],"group":"cf-nel","max_age":604800}', 'Connection': 'Keep-Alive', 'Content-Type': 'application/xml', 'Cache-Control': 'max-age=60', 'x-sp-metadata': 'HS256.CNWhjZ4GEocBCiQwNWRlNzQzNi1mZTJlLTQwOGYtOTBhYi1hNzA2ZDA2ODE4NzUQkMbntoHF+wIaBgjEhY2eBiIMMTcyLjY4LjE4LjU1KPyxAjADOARCFlRMU19BRVNfMTI4X0dDTV9TSEEyNTZaIDkwNTg1ZTE1YTQ0MTA5YzFkYjEzMjU4MDQwYjczYTIwGikSJGRkMGU4MTk3LWU4ZDUtNDE5My1iNWZlLWE2ZTY1MDFlNzFlMxjYASIaCAISFGNkczIwNS5zcDMuaHdjZG4ubmV0GAk=.udXArSFrr+tYgTzf/GvfFJWwReMRhLEt/t68FdyzntU=', 'CF-Cache-Status': 'DYNAMIC', 'x-amz-request-id': 'tx00000000000025213fc4b-0063c342c5-42f5c793-sfo2a', 'Transfer-Encoding': 'chunked', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;Error&gt;&lt;Code&gt;AccessDenied&lt;/Code&gt;&lt;BucketName&gt;apicep&lt;/BucketName&gt;&lt;RequestId&gt;tx00000000000025213fc4b-0063c342c5-42f5c793-sfo2a&lt;/RequestId&gt;&lt;HostId&gt;42f5c793-sfo2a-sfo&lt;/HostId&gt;&lt;/Error&gt; 
 </msg>
<msg timestamp="20230114 21:03:36.079" level="INFO">C:\Users\raphael.maciel\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'cdn.apicep.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230114 21:03:36.082" level="INFO">${RESPONSE_CONSULTA_CEP} = &lt;Response [403]&gt;</msg>
<status status="PASS" starttime="20230114 21:03:35.073" endtime="20230114 21:03:36.082"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE_CONSULTA_CEP}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230114 21:03:36.083" level="INFO">${RESPONSE_CONSULTA_CEP} = &lt;Response [403]&gt;</msg>
<status status="PASS" starttime="20230114 21:03:36.082" endtime="20230114 21:03:36.083"/>
</kw>
<status status="PASS" starttime="20230114 21:03:35.072" endtime="20230114 21:03:36.084"/>
</kw>
<kw name="Então a requisição deve falhar e retornar o status &quot;403&quot;" library="PesquisarCep" sourcename="Então a requisição deve falhar e retornar o status &quot;${STATUS_403}&quot;">
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${STATUS_403}</arg>
<arg>response=${RESPONSE_CONSULTA_CEP}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20230114 21:03:36.085" endtime="20230114 21:03:36.086"/>
</kw>
<status status="PASS" starttime="20230114 21:03:36.085" endtime="20230114 21:03:36.087"/>
</kw>
<status status="PASS" starttime="20230114 21:03:35.071" endtime="20230114 21:03:36.088"/>
</test>
<status status="PASS" starttime="20230114 21:03:34.465" endtime="20230114 21:03:36.092"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="PesquisarCep">PesquisarCep</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
